	Stack nodeVisited = new Stack();//global because of recursion


Private void sortNodes(nodeList)

	For i=0; i<nodeList.size();i++//arbitrary maniplulation, may not need it
	arrayList[i] = nodeList[i];

  
  x=0 or 1; //index for first object
while (arrayList.get(x)]!=null)
  Object new = arrayList.get(x)
  x++;
If(new.getDependencies()!=null)
  dependencies = new.getDependencies(); //treated dependencies as arraylist
  sortNodes(dependencies); //recursively goes into dependency list of nodes

Else
  nodeVisited.push(new);  //when no dependency exists, push to stack
  arrayList.remove(new);  //might need to monitor a master list to know when all elements are removed.
